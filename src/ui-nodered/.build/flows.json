[
    {
        "id": "f0fb5bfb.b56118",
        "type": "tab",
        "label": "Aquarium",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e08f2a72.fad1a8",
        "type": "tab",
        "label": "OS Info",
        "disabled": false,
        "info": ""
    },
    {
        "id": "84ead1b4aafb92cf",
        "type": "subflow",
        "name": "audio out",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 440,
                "y": 280,
                "wires": [
                    {
                        "id": "1fa96b758f664dc6"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "32932201d882ccd9",
        "type": "subflow",
        "name": "guard against scheduler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "609e9819ae9fd155"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 320,
                "wires": [
                    {
                        "id": "47823feef24f1614",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bfd52a2f.140298",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "aqualinks-theme",
                "default": "#4B7930",
                "baseColor": "#273e55",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#00aa95",
                    "value": "#273e55",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#273e55",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#eeeeee",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#3f6489",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#e5e3e3",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#2d2d2d",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#00c59a",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Aqualinks",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 55,
                "sy": 55,
                "gx": 10,
                "gy": 10,
                "cx": 1,
                "cy": 1,
                "px": 2,
                "py": 2
            },
            "lockMenu": "false"
        }
    },
    {
        "id": "dfcd1fed.027e5",
        "type": "ui_tab",
        "name": "OS Info",
        "icon": "home",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "15c95d11.880f13",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.100",
        "port": "",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4866fe40.826af",
        "type": "ui_group",
        "name": "Control",
        "tab": "632a8ea7.1a5ef",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "7872ac4c.41d094",
        "type": "ui_group",
        "name": "Monitoring",
        "tab": "632a8ea7.1a5ef",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "632a8ea7.1a5ef",
        "type": "ui_tab",
        "name": "Aquarium",
        "icon": "pets",
        "order": 1
    },
    {
        "id": "b9f213db.1f6bc",
        "type": "ui_group",
        "name": "Settings",
        "tab": "632a8ea7.1a5ef",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "7d509f7a.ec22c",
        "type": "ui_group",
        "name": "Device",
        "tab": "632a8ea7.1a5ef",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "9659c8c6.14dba8",
        "type": "ui_group",
        "name": "System Information",
        "tab": "dfcd1fed.027e5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6e83a0b6e22569c1",
        "type": "ui_audio",
        "z": "84ead1b4aafb92cf",
        "name": "",
        "group": "b9f213db.1f6bc",
        "voice": "en-GB",
        "always": false,
        "x": 820,
        "y": 280,
        "wires": []
    },
    {
        "id": "1fa96b758f664dc6",
        "type": "function",
        "z": "84ead1b4aafb92cf",
        "name": "generate message",
        "func": "if (flow.get('$parent.SYSTEM_SOUNDS_VARIABLE')) {\n\n    switch (msg.topic) {\n        case \"SW_1\":\n            msg.payload = `Air Pump is ${msg.payload ? \"ON\" : \"OFF\"}`;\n            break;\n        case \"SW_2\":\n            msg.payload = `Lighting is ${msg.payload ? \"ON\" : \"OFF\"}`;\n            break;\n        case \"SW_3\":\n            msg.payload = `\"Water Filter is ${msg.payload ? \"ON\" : \"OFF\"}`;\n            break;\n        case \"SW_4\":\n            msg.payload = `Heater is ${msg.payload ? \"ON\" : \"OFF\"}`;\n            break;\n        case \"automaticModeSwitch\":\n            msg.payload = `Automatic mode ${msg.payload ? \"enabled\" : \"disabled\"}`;\n            break;\n        case \"systemSoundsSwitch\":\n            msg.payload = `System sound ${msg.payload ? \"enabled\" : \"disabled\"}`;\n            break;\n        case \"tempretureSlider\":\n            var degrees = msg.payload;\n            msg.payload = \"Temperature is set to \" + degrees + \" degrees\";\n            break;\n        default:\n            break;\n    }\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "6e83a0b6e22569c1"
            ]
        ]
    },
    {
        "id": "609e9819ae9fd155",
        "type": "function",
        "z": "32932201d882ccd9",
        "name": "Guard agains disabled automatic mode",
        "func": "if (flow.get('$parent.AUTOMATIC_MODE_VARIABLE')) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 240,
        "wires": [
            [
                "47823feef24f1614"
            ]
        ]
    },
    {
        "id": "47823feef24f1614",
        "type": "function",
        "z": "32932201d882ccd9",
        "name": "Guard agains not scheduled devices",
        "func": "if (msg !== undefined && msg.topic !== undefined) {\n\n    var schedulerOutput = '0';\n\n    switch (msg.topic) {\n        case 'Air Pump':\n            schedulerOutput = '0';\n            break;\n        case 'Lighting':\n            schedulerOutput = '1';\n            break;\n        case 'Water Filter':\n            schedulerOutput = '2';\n            break;\n        case 'Heater':\n            schedulerOutput = '3';\n            break;\n    }\n\n    let availableShedules = flow.get('$parent.ENABLED_SHEDULE_OUTPUTS_VARIABLE') || [];\n    let hasShedule = availableShedules.indexOf(schedulerOutput) >= 0;\n\n    if (hasShedule) {\n        msg.topic = schedulerOutput\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7b4ce337.967f8c",
        "type": "mqtt out",
        "z": "f0fb5bfb.b56118",
        "name": "MQTT publisher /aqua/controls/",
        "topic": "/aqua/controls/",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "15c95d11.880f13",
        "x": 790,
        "y": 2540,
        "wires": []
    },
    {
        "id": "e4c4af0f.6fff6",
        "type": "ui_switch",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "label": "SW 1 - Air Pump",
        "tooltip": "bla",
        "group": "4866fe40.826af",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "SW_1",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 820,
        "y": 2320,
        "wires": [
            [
                "7957ceef32a55001"
            ]
        ]
    },
    {
        "id": "e4780e31.5909d",
        "type": "ui_switch",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "label": "SW 2 - Lighting",
        "tooltip": "",
        "group": "4866fe40.826af",
        "order": 2,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "SW_2",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 820,
        "y": 2360,
        "wires": [
            [
                "13f38e6b841ceda8"
            ]
        ]
    },
    {
        "id": "154bd42c.d99f0c",
        "type": "ui_slider",
        "z": "f0fb5bfb.b56118",
        "name": "UI tempreture slider",
        "label": "Set tempreture",
        "tooltip": "",
        "group": "b9f213db.1f6bc",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "tempretureSlider",
        "topicType": "str",
        "min": "10",
        "max": "35",
        "step": ".5",
        "className": "",
        "x": 530,
        "y": 1820,
        "wires": [
            [
                "f9af4c11.402dd",
                "51439690fe24d658",
                "c12fc5e3f4910eb8"
            ]
        ]
    },
    {
        "id": "f9af4c11.402dd",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "b9f213db.1f6bc",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "UI tempreture value",
        "label": "Temperature set to",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 1820,
        "wires": []
    },
    {
        "id": "3d3941a4.7e265e",
        "type": "ui_switch",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "label": "SW 3 - Water Filter",
        "tooltip": "",
        "group": "4866fe40.826af",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "SW_3",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 830,
        "y": 2400,
        "wires": [
            [
                "ebf2022e0f924915"
            ]
        ]
    },
    {
        "id": "5bb9bb3f.03efd4",
        "type": "ui_switch",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "label": "Automatic mode",
        "tooltip": "",
        "group": "b9f213db.1f6bc",
        "order": 6,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "automaticModeSwitch",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 520,
        "y": 1660,
        "wires": [
            [
                "356f2e17a86f670a",
                "67a80b29afedc99d"
            ]
        ]
    },
    {
        "id": "d3f7b76b.1b0588",
        "type": "ui_template",
        "z": "f0fb5bfb.b56118",
        "group": "b9f213db.1f6bc",
        "name": "Description, application settings",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>\n    Application related settings\n</p>\n<p>\n   Enable smart control, setup temprature target, scheduling times, etc..\n</p>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "4d5851a.32c52b",
        "type": "ui_switch",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "label": "SW 4 - Heater",
        "tooltip": "",
        "group": "4866fe40.826af",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "SW_4",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 820,
        "y": 2440,
        "wires": [
            [
                "b517ab53146a4e8f"
            ]
        ]
    },
    {
        "id": "f0a0624f.13d6f",
        "type": "comment",
        "z": "f0fb5bfb.b56118",
        "name": "Control buttons",
        "info": "",
        "x": 140,
        "y": 2260,
        "wires": []
    },
    {
        "id": "1b0933df.de53dc",
        "type": "comment",
        "z": "f0fb5bfb.b56118",
        "name": "Aquarium control",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "f4024f1c.6d875",
        "type": "comment",
        "z": "f0fb5bfb.b56118",
        "name": "Aquarium stats",
        "info": "",
        "x": 140,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d754f75.c41aa08",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "heater controll",
        "func": "var tempretureSetTo = msg.payload\n\nif(msg.payload >= tempretureSetTo){\n    /* stop heater */\n    msg.payload = false;\n}\nelse if (msg.payload < tempretureSetTo){\n    /* start heater */\n    msg.payload = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "f853e202.50e9c",
        "type": "comment",
        "z": "f0fb5bfb.b56118",
        "name": "TODO: fix",
        "info": "",
        "x": 1200,
        "y": 1820,
        "wires": []
    },
    {
        "id": "d02b044a.4b7c18",
        "type": "comment",
        "z": "f0fb5bfb.b56118",
        "name": "Device info ",
        "info": "",
        "x": 120,
        "y": 420,
        "wires": []
    },
    {
        "id": "e9158f82.f1e5f",
        "type": "comment",
        "z": "f0fb5bfb.b56118",
        "name": "Settings",
        "info": "",
        "x": 120,
        "y": 1380,
        "wires": []
    },
    {
        "id": "e78613bd.89839",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload.uptimeAsString}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 480,
        "wires": []
    },
    {
        "id": "eb5ff3cb.ad711",
        "type": "json",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 480,
        "wires": [
            [
                "13f0bc3f.3ec374",
                "70aebf10.926aa",
                "249f9490.5eac8c",
                "4d123a32.f96534",
                "205f1a94.84a2d6",
                "8ffa0dc5.de3d8",
                "4a79b3cc.6f6d1c",
                "700f356b.a9c42c",
                "3fbe460c.51fcca",
                "903a05bf.866808",
                "cf10ccc1.5aa05",
                "23cd40fa.ab7f",
                "4853bb49.d42e64",
                "6149588b.699838"
            ]
        ]
    },
    {
        "id": "13f0bc3f.3ec374",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 10,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Arch",
        "format": "{{msg.payload.arch}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "70aebf10.926aa",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 11,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Firmware Id",
        "format": "{{msg.payload.fw_id}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "249f9490.5eac8c",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 12,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "App",
        "format": "{{msg.payload.app}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 600,
        "wires": []
    },
    {
        "id": "4d123a32.f96534",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 14,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "FS free",
        "format": "{{msg.payload.fs_free/1000}} kB",
        "layout": "row-spread",
        "x": 1020,
        "y": 640,
        "wires": []
    },
    {
        "id": "205f1a94.84a2d6",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 13,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "FS size",
        "format": "{{msg.payload.fs_size/1000}} kB",
        "layout": "row-spread",
        "x": 1020,
        "y": 680,
        "wires": []
    },
    {
        "id": "8ffa0dc5.de3d8",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 15,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "RAM free min",
        "format": "{{msg.payload.ram_min_free/1000}} kB",
        "layout": "row-spread",
        "x": 1040,
        "y": 720,
        "wires": []
    },
    {
        "id": "4a79b3cc.6f6d1c",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 16,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "RAM free",
        "format": "{{msg.payload.ram_free/1000}} kB",
        "layout": "row-spread",
        "x": 1020,
        "y": 760,
        "wires": []
    },
    {
        "id": "700f356b.a9c42c",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 17,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "RAM size",
        "format": "{{msg.payload.ram_size/1000}} kB",
        "layout": "row-spread",
        "x": 1020,
        "y": 800,
        "wires": []
    },
    {
        "id": "3fbe460c.51fcca",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 8,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "MAC address",
        "format": "{{msg.payload.mac}}",
        "layout": "row-spread",
        "x": 1040,
        "y": 840,
        "wires": []
    },
    {
        "id": "903a05bf.866808",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "WiFI ssid",
        "format": "{{msg.payload.wifi.ssid}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 880,
        "wires": []
    },
    {
        "id": "cf10ccc1.5aa05",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "WiFI status",
        "format": "{{msg.payload.wifi.status}}",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 920,
        "wires": []
    },
    {
        "id": "23cd40fa.ab7f",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 9,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "WiFI ap_ip",
        "format": "{{msg.payload.wifi.ap_ip}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 960,
        "wires": []
    },
    {
        "id": "4853bb49.d42e64",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "WiFI IP",
        "format": "{{msg.payload.wifi.sta_ip}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f44c9152.b470f",
        "type": "ui_gauge",
        "z": "f0fb5bfb.b56118",
        "name": "Water Temp",
        "group": "7872ac4c.41d094",
        "order": 3,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Water Temp",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": "10",
        "max": "50",
        "colors": [
            "#ffff00",
            "#00ca00",
            "#ff0000"
        ],
        "seg1": "22",
        "seg2": "30",
        "x": 1030,
        "y": 1260,
        "wires": []
    },
    {
        "id": "aac8be38.91ff5",
        "type": "ui_chart",
        "z": "f0fb5bfb.b56118",
        "name": "temp last 10 days",
        "group": "7872ac4c.41d094",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "last 10d, °C",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "15",
        "ymax": "35",
        "removeOlder": "10",
        "removeOlderPoints": "400",
        "removeOlderUnit": "86400",
        "cutout": "",
        "useOneColor": false,
        "colors": [
            "#3f6489",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1050,
        "y": 1340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9df2ed87.4fe81",
        "type": "ui_chart",
        "z": "f0fb5bfb.b56118",
        "name": "Temp 24 H",
        "group": "7872ac4c.41d094",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "last 24h, °C",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "200",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00c59a",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1030,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "b8475d1f.41e2d",
        "type": "delay",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 820,
        "y": 1300,
        "wires": [
            [
                "9df2ed87.4fe81"
            ]
        ]
    },
    {
        "id": "178faa65.5c8066",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "toFixed(2)",
        "func": "var value = msg.payload.temperature;\n\nmsg.payload = value.toFixed(2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 1260,
        "wires": [
            [
                "f44c9152.b470f",
                "b8475d1f.41e2d",
                "abe7782d.98de18"
            ]
        ]
    },
    {
        "id": "aacaee0a.59d23",
        "type": "json",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 1260,
        "wires": [
            [
                "178faa65.5c8066"
            ]
        ]
    },
    {
        "id": "abe7782d.98de18",
        "type": "delay",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 820,
        "y": 1340,
        "wires": [
            [
                "aac8be38.91ff5"
            ]
        ]
    },
    {
        "id": "8d00b318.cd4a5",
        "type": "mqtt in",
        "z": "f0fb5bfb.b56118",
        "name": "MQTT subs /aqua/temp/",
        "topic": "/aqua/temp/",
        "qos": "1",
        "datatype": "auto",
        "broker": "15c95d11.880f13",
        "inputs": 0,
        "x": 230,
        "y": 1260,
        "wires": [
            [
                "aacaee0a.59d23"
            ]
        ]
    },
    {
        "id": "37f89023.0697f",
        "type": "ui_switch",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "label": "System Sounds",
        "tooltip": "",
        "group": "b9f213db.1f6bc",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "systemSoundsSwitch",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 520,
        "y": 1580,
        "wires": [
            [
                "e5459bb2.4876a8",
                "3bf74c154481e63a"
            ]
        ]
    },
    {
        "id": "c97421eb.10852",
        "type": "ui_text",
        "z": "f0fb5bfb.b56118",
        "group": "7d509f7a.ec22c",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f5277a6f.71abb8",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "last updated",
        "func": "var time = new Date();\nvar year = time.getFullYear();\nvar month = time.getMonth()+1;\nvar date1 = time.getDate();\nvar hour = time.getHours();\nvar minutes = time.getMinutes();\nvar seconds = time.getSeconds();\n\nmsg.payload = (year + \"-\" + month + \"-\"+date1+\" \"+hour+\":\"+minutes+\":\"+seconds + \" UTC\");\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 520,
        "wires": [
            [
                "c97421eb.10852"
            ]
        ]
    },
    {
        "id": "e5459bb2.4876a8",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "set SYSTEM_SOUNDS_VARIABLE",
        "func": "flow.set('SYSTEM_SOUNDS_VARIABLE', msg.payload); ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "daf87411.279358",
        "type": "ui_gauge",
        "z": "f0fb5bfb.b56118",
        "name": "RAM Chart",
        "group": "7d509f7a.ec22c",
        "order": 5,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "RAM usage",
        "label": "%",
        "format": "{{msg.payload.freeRAMPercentage}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#05d200",
            "#ff8d1c",
            "#ff0000"
        ],
        "seg1": "55",
        "seg2": "70",
        "x": 1030,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a756d445.48c008",
        "type": "ui_gauge",
        "z": "f0fb5bfb.b56118",
        "name": "FS Chart",
        "group": "7d509f7a.ec22c",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "FS free",
        "label": "%",
        "format": "{{msg.payload.freeFSPercentage}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#05d200",
            "#ff8d1c",
            "#ff0000"
        ],
        "seg1": "55",
        "seg2": "70",
        "x": 1020,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6149588b.699838",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "functions",
        "func": "// Uptime human readable \nfunction timeConversion(millisec) {\n    var seconds = (millisec / 1000).toFixed(1);\n    var minutes = (millisec / (1000 * 60)).toFixed(1);\n    var hours = (millisec / (1000 * 60 * 60)).toFixed(1);\n    var days = (millisec / (1000 * 60 * 60 * 24)).toFixed(1);\n\n    if (seconds < 60) {\n        return seconds + \" Sec\";\n    } else if (minutes < 60) {\n        return minutes + \" Min\";\n    } else if (hours < 24) {\n        return hours + \" Hrs\";\n    } else {\n        return days + \" Days\"\n    }\n}\n\n// Free RAM/FS percentage\nfunction calcPercentageFromTotal(valueToConvert, totalValue) {\n    var value = ((valueToConvert / totalValue) * 100);\n    return Math.round( value * 1e1 ) / 1e1;\n}\n\nmsg.payload.uptimeAsString = timeConversion(msg.payload.uptime * 1000);\nmsg.payload.freeRAMPercentage = calcPercentageFromTotal(msg.payload.ram_free, msg.payload.ram_size);\nmsg.payload.freeFSPercentage = calcPercentageFromTotal(msg.payload.fs_free, msg.payload.fs_size);\n\n// Dont need the whole WIFI obj\nmsg.payload.wifi = msg.payload.wifi.sta_ip;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 560,
        "wires": [
            [
                "e78613bd.89839",
                "daf87411.279358",
                "a756d445.48c008"
            ]
        ]
    },
    {
        "id": "18221f81.bd6ab",
        "type": "mqtt in",
        "z": "f0fb5bfb.b56118",
        "name": "MQTT subs /aqua/deviceInfo/",
        "topic": "/aqua/deviceInfo/",
        "qos": "1",
        "datatype": "auto",
        "broker": "15c95d11.880f13",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 240,
        "y": 472,
        "wires": [
            [
                "eb5ff3cb.ad711",
                "f5277a6f.71abb8"
            ]
        ]
    },
    {
        "id": "79a2eb9cd95df44f",
        "type": "ui_time_scheduler",
        "z": "f0fb5bfb.b56118",
        "group": "b9f213db.1f6bc",
        "name": "Schedular",
        "startDay": "1",
        "refresh": "10",
        "devices": [
            "Air Pump",
            "Lighting",
            "Water Filter",
            "Heater"
        ],
        "singleOff": true,
        "onlySendChange": true,
        "customPayload": false,
        "eventMode": false,
        "eventOptions": [],
        "sendTopic": true,
        "lat": "",
        "lon": "",
        "customContextStore": "",
        "outputs": 5,
        "order": 11,
        "width": 0,
        "height": 0,
        "x": 240,
        "y": 2060,
        "wires": [
            [
                "04cae871065b8015",
                "f1817772088bc2ef"
            ],
            [
                "f30a275a81bedcfa"
            ],
            [
                "f30a275a81bedcfa"
            ],
            [
                "f30a275a81bedcfa"
            ],
            [
                "f30a275a81bedcfa"
            ]
        ],
        "outputLabels": [
            "",
            "SW1",
            "SW2",
            "SW3",
            "SW4"
        ]
    },
    {
        "id": "34ebb8497ed6dcd7",
        "type": "ui_template",
        "z": "f0fb5bfb.b56118",
        "group": "b9f213db.1f6bc",
        "name": "Description, schedular settings",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<p class=\"label nr-dashboard-chart-title nr-dashboard-chart-titlel\">\n    Schedular\n</p>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "aafecc893cd859d1",
        "type": "ui_template",
        "z": "f0fb5bfb.b56118",
        "group": "b9f213db.1f6bc",
        "name": "Description, general settings",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<p class=\"label nr-dashboard-chart-title nr-dashboard-chart-titlel\">\n    General\n</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "745497cda6c78cb1",
        "type": "ui_template",
        "z": "f0fb5bfb.b56118",
        "group": "b9f213db.1f6bc",
        "name": "Description, tempretures settings",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<p class=\"label nr-dashboard-chart-title nr-dashboard-chart-titlel\">\n    Tempretures <span>&#128679;</span>\n</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "6523140ee96ed19a",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "generate topic and set variable",
        "func": "var topic = msg.topic;\nvar payload = msg.payload; \n\nif (payload) {\n    msg.payload = { [topic]: 0 };\n}\nelse {\n    msg.payload = { [topic]: 1 };\n}\n\nflow.set(topic, payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2540,
        "wires": [
            [
                "7b4ce337.967f8c"
            ]
        ]
    },
    {
        "id": "5900aa461e5065af",
        "type": "subflow:84ead1b4aafb92cf",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "x": 1200,
        "y": 1580,
        "wires": []
    },
    {
        "id": "356f2e17a86f670a",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "set AUTOMATIC_MODE_VARIABLE",
        "func": "flow.set('AUTOMATIC_MODE_VARIABLE', msg.payload); ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "b517ab53146a4e8f",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "SW4 out",
        "mode": "link",
        "links": [
            "46c9bbfab1eb6ca2",
            "4fb9bf5026c919d5"
        ],
        "x": 995,
        "y": 2440,
        "wires": []
    },
    {
        "id": "46c9bbfab1eb6ca2",
        "type": "link in",
        "z": "f0fb5bfb.b56118",
        "name": "audio in",
        "links": [
            "13f38e6b841ceda8",
            "3bf74c154481e63a",
            "51439690fe24d658",
            "67a80b29afedc99d",
            "7957ceef32a55001",
            "b517ab53146a4e8f",
            "ebf2022e0f924915"
        ],
        "x": 1095,
        "y": 1580,
        "wires": [
            [
                "5900aa461e5065af"
            ]
        ]
    },
    {
        "id": "ebf2022e0f924915",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "SW3 out",
        "mode": "link",
        "links": [
            "46c9bbfab1eb6ca2",
            "4fb9bf5026c919d5"
        ],
        "x": 995,
        "y": 2400,
        "wires": []
    },
    {
        "id": "13f38e6b841ceda8",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "SW2 out",
        "mode": "link",
        "links": [
            "46c9bbfab1eb6ca2",
            "4fb9bf5026c919d5"
        ],
        "x": 995,
        "y": 2360,
        "wires": []
    },
    {
        "id": "7957ceef32a55001",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "SW1 out",
        "mode": "link",
        "links": [
            "46c9bbfab1eb6ca2",
            "4fb9bf5026c919d5"
        ],
        "x": 995,
        "y": 2320,
        "wires": []
    },
    {
        "id": "51439690fe24d658",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "tempretureSlider out",
        "mode": "link",
        "links": [
            "46c9bbfab1eb6ca2"
        ],
        "x": 705,
        "y": 1920,
        "wires": []
    },
    {
        "id": "3bf74c154481e63a",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "systemSoundsSwitch out",
        "mode": "link",
        "links": [
            "46c9bbfab1eb6ca2"
        ],
        "x": 695,
        "y": 1620,
        "wires": []
    },
    {
        "id": "67a80b29afedc99d",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "automaticModeSwitch out",
        "mode": "link",
        "links": [
            "46c9bbfab1eb6ca2"
        ],
        "x": 695,
        "y": 1700,
        "wires": []
    },
    {
        "id": "a17f4b4c6838b343",
        "type": "link in",
        "z": "f0fb5bfb.b56118",
        "name": "init tempretureSlider in",
        "links": [
            "92a58a680393608f"
        ],
        "x": 195,
        "y": 1820,
        "wires": [
            [
                "923840690125bfd1"
            ]
        ]
    },
    {
        "id": "923840690125bfd1",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "get variable",
        "func": "msg.payload = flow.get('DEFAULT_TEMPRETURE_VARIABLE');\nreturn msg;\n\n\n\n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1820,
        "wires": [
            [
                "154bd42c.d99f0c"
            ]
        ]
    },
    {
        "id": "caef935c0d51533d",
        "type": "link in",
        "z": "f0fb5bfb.b56118",
        "name": "init systemSoundsSwitch in",
        "links": [
            "92a58a680393608f"
        ],
        "x": 195,
        "y": 1580,
        "wires": [
            [
                "f0ffad2fa93c1fcc"
            ]
        ]
    },
    {
        "id": "9049fdcaae886c31",
        "type": "link in",
        "z": "f0fb5bfb.b56118",
        "name": "init automaticModeSwitch in",
        "links": [
            "92a58a680393608f"
        ],
        "x": 195,
        "y": 1660,
        "wires": [
            [
                "054650a1d0796593"
            ]
        ]
    },
    {
        "id": "f0ffad2fa93c1fcc",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "get variable",
        "func": "msg.payload = flow.get('SYSTEM_SOUNDS_VARIABLE');\nreturn msg;\n\n\n\n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1580,
        "wires": [
            [
                "37f89023.0697f"
            ]
        ]
    },
    {
        "id": "054650a1d0796593",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "get variable",
        "func": "msg.payload = flow.get('AUTOMATIC_MODE_VARIABLE');\nreturn msg;\n\n\n\n \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1660,
        "wires": [
            [
                "5bb9bb3f.03efd4"
            ]
        ]
    },
    {
        "id": "f51cf00e2b03379b",
        "type": "inject",
        "z": "f0fb5bfb.b56118",
        "name": "init at start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "583b8b1ebab18eba"
            ]
        ]
    },
    {
        "id": "583b8b1ebab18eba",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "set DEFAULT FLOW VARIABLES",
        "func": "const flowVariables = [\n    {\n        Name: \"DEFAULT_TEMPRETURE_VARIABLE\",\n        Value: 22\n    },\n    {\n        Name: \"SYSTEM_SOUNDS_VARIABLE\",\n        Value: false\n    },\n    {\n        Name: \"AUTOMATIC_MODE_VARIABLE\",\n        Value: true\n    },\n    {\n        Name: \"SW_1\",\n        Value: true\n    },\n    {\n        Name: \"SW_2\",\n        Value: false\n    },\n    {\n        Name: \"SW_3\",\n        Value: true\n    },\n    {\n        Name: \"SW_1\",\n        Value: false\n    }\n];\n\nflowVariables.forEach(function (obj) {\n    if (flow.get(obj.Name) === undefined) {\n        flow.set(obj.Name, obj.Value);\n    }\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 140,
        "wires": [
            [
                "92a58a680393608f"
            ]
        ]
    },
    {
        "id": "92a58a680393608f",
        "type": "link out",
        "z": "f0fb5bfb.b56118",
        "name": "flow variables out",
        "mode": "link",
        "links": [
            "9049fdcaae886c31",
            "90b946790a3c3c5f",
            "a17f4b4c6838b343",
            "caef935c0d51533d"
        ],
        "x": 665,
        "y": 140,
        "wires": []
    },
    {
        "id": "90b946790a3c3c5f",
        "type": "link in",
        "z": "f0fb5bfb.b56118",
        "name": "init controls in",
        "links": [
            "92a58a680393608f"
        ],
        "x": 195,
        "y": 2320,
        "wires": [
            [
                "c61af47e73089e2e",
                "dc8977f69bbe1feb",
                "0643570f92991ca1",
                "721052b6dd2dec17"
            ]
        ]
    },
    {
        "id": "c61af47e73089e2e",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "get variable",
        "func": "msg.payload = flow.get('SW_1');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2320,
        "wires": [
            [
                "e4c4af0f.6fff6"
            ]
        ]
    },
    {
        "id": "dc8977f69bbe1feb",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "get variable",
        "func": "msg.payload = flow.get('SW_2');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2360,
        "wires": [
            [
                "e4780e31.5909d"
            ]
        ]
    },
    {
        "id": "0643570f92991ca1",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "get variable",
        "func": "msg.payload = flow.get('SW_3');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2400,
        "wires": [
            [
                "3d3941a4.7e265e"
            ]
        ]
    },
    {
        "id": "721052b6dd2dec17",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "get variable",
        "func": "msg.payload = flow.get('SW_4');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2440,
        "wires": [
            [
                "4d5851a.32c52b"
            ]
        ]
    },
    {
        "id": "4fb9bf5026c919d5",
        "type": "link in",
        "z": "f0fb5bfb.b56118",
        "name": "switches to topic in",
        "links": [
            "13f38e6b841ceda8",
            "7957ceef32a55001",
            "b517ab53146a4e8f",
            "ebf2022e0f924915"
        ],
        "x": 305,
        "y": 2540,
        "wires": [
            [
                "6523140ee96ed19a"
            ]
        ]
    },
    {
        "id": "f30a275a81bedcfa",
        "type": "subflow:32932201d882ccd9",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "x": 490,
        "y": 2120,
        "wires": [
            [
                "e4c4af0f.6fff6",
                "19020a3dded47d21",
                "37960ac905cf58d1"
            ]
        ]
    },
    {
        "id": "04cae871065b8015",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "set ENABLED_SHEDULE_OUTPUTS_VARIABLE",
        "func": "// set variable that indicates whatever\n// the controlled unit has an event\n\n// this is required because shedular \n// outputs all the defined devices state\n// check \"can control\" node for environment usage.\n\nlet jsonPayload = JSON.parse(msg.payload);\nlet onlyOutputs = jsonPayload.timers.map(t => t.output);\nlet uniqueItems = [...new Set(onlyOutputs)]\n\nflow.set('ENABLED_SHEDULE_OUTPUTS_VARIABLE', uniqueItems)\n\nmsg.payload = uniqueItems;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "19020a3dded47d21",
        "type": "switch",
        "z": "f0fb5bfb.b56118",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 530,
        "y": 2240,
        "wires": [
            [
                "e4c4af0f.6fff6"
            ],
            [
                "e4780e31.5909d"
            ],
            [
                "3d3941a4.7e265e"
            ],
            [
                "4d5851a.32c52b"
            ]
        ]
    },
    {
        "id": "c12fc5e3f4910eb8",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "set DEFAULT_TEMPRETURE_VARIABLE",
        "func": "flow.set('DEFAULT_TEMPRETURE_VARIABLE', msg.payload); ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "37960ac905cf58d1",
        "type": "debug",
        "z": "f0fb5bfb.b56118",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 2120,
        "wires": []
    },
    {
        "id": "c8c0a61b1c121bfc",
        "type": "debug",
        "z": "f0fb5bfb.b56118",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 2080,
        "wires": []
    },
    {
        "id": "f1817772088bc2ef",
        "type": "function",
        "z": "f0fb5bfb.b56118",
        "name": "JSON Parse",
        "func": "return JSON.parse(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2080,
        "wires": [
            [
                "c8c0a61b1c121bfc"
            ]
        ]
    },
    {
        "id": "13536aba.947635",
        "type": "OS",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "a9d13ab6.594328",
                "f7738318.4d138",
                "e137dd34.66c06",
                "2e5481ca.dab31e",
                "e8548cb8.4df59"
            ]
        ]
    },
    {
        "id": "b2e13349.f202a",
        "type": "Uptime",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "x": 380,
        "y": 180,
        "wires": [
            [
                "20500e77.5ea732"
            ]
        ]
    },
    {
        "id": "3e9cfb3f.1f4774",
        "type": "CPUs",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "4aed8369.47ab4c"
            ]
        ]
    },
    {
        "id": "25f38353.f6269c",
        "type": "inject",
        "z": "e08f2a72.fad1a8",
        "name": "each 3 sec",
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "b2e13349.f202a",
                "9c530b5a.cf3ca8"
            ]
        ]
    },
    {
        "id": "20500e77.5ea732",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "Uptime",
        "func": "function timeConversion(millisec) {\n\n    var seconds = (millisec / 1000).toFixed(1);\n\n    var minutes = (millisec / (1000 * 60)).toFixed(1);\n\n    var hours = (millisec / (1000 * 60 * 60)).toFixed(1);\n\n    var days = (millisec / (1000 * 60 * 60 * 24)).toFixed(1);\n\n    if (seconds < 60) {\n        return seconds + \" Sec\";\n    } else if (minutes < 60) {\n        return minutes + \" Min\";\n    } else if (hours < 24) {\n        return hours + \" Hrs\";\n    } else {\n        return days + \" Days\"\n    }\n}\n\nmsg.payload = timeConversion(msg.payload.uptime * 1000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 180,
        "wires": [
            [
                "d280c7ae.740fd8"
            ]
        ]
    },
    {
        "id": "d280c7ae.740fd8",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 920,
        "y": 180,
        "wires": []
    },
    {
        "id": "a9d13ab6.594328",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "hostname",
        "func": "msg.payload = msg.payload.hostname;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f7738318.4d138",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "platform",
        "func": "msg.payload = msg.payload.platform;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 500,
        "wires": [
            [
                "8c679fa5.fdab2"
            ]
        ]
    },
    {
        "id": "8c679fa5.fdab2",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Platform",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 880,
        "y": 500,
        "wires": []
    },
    {
        "id": "e137dd34.66c06",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "arch",
        "func": "msg.payload = msg.payload.arch;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 540,
        "wires": [
            [
                "2a67ba8f.453556"
            ]
        ]
    },
    {
        "id": "2a67ba8f.453556",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Arch",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 540,
        "wires": []
    },
    {
        "id": "2e5481ca.dab31e",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "release",
        "func": "msg.payload = msg.payload.release;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 580,
        "wires": [
            [
                "d0f031a9.b521c"
            ]
        ]
    },
    {
        "id": "d0f031a9.b521c",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Release",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 880,
        "y": 580,
        "wires": []
    },
    {
        "id": "4aed8369.47ab4c",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "CPU",
        "func": "msg.payload = msg.payload.cpus[0].model;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 660,
        "wires": [
            [
                "a16bbc77.4b1b9"
            ]
        ]
    },
    {
        "id": "a16bbc77.4b1b9",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "CPU ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 870,
        "y": 660,
        "wires": []
    },
    {
        "id": "15244ffe.2ee5c",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "OS",
        "label": "OS",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 870,
        "y": 620,
        "wires": []
    },
    {
        "id": "e8548cb8.4df59",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "osType",
        "func": "msg.payload = msg.payload.type; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 620,
        "wires": [
            [
                "15244ffe.2ee5c"
            ]
        ]
    },
    {
        "id": "3efc7d87.da8402",
        "type": "comment",
        "z": "e08f2a72.fad1a8",
        "name": "System information",
        "info": "",
        "x": 130,
        "y": 120,
        "wires": []
    },
    {
        "id": "f9aa9b3.54ccf68",
        "type": "inject",
        "z": "e08f2a72.fad1a8",
        "name": "each 3 min",
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "13536aba.947635",
                "3e9cfb3f.1f4774",
                "d45b4fde.90bd2"
            ]
        ]
    },
    {
        "id": "9c530b5a.cf3ca8",
        "type": "Drives",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "c36df418.a4eae8"
            ]
        ]
    },
    {
        "id": "cad874b2.5866b8",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 8,
        "width": "0",
        "height": "0",
        "name": "size",
        "label": "Capacity",
        "format": "{{msg.payload}} GB",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "9bb2e59a.d7af18",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 10,
        "width": "4",
        "height": "1",
        "name": "used",
        "label": "Used",
        "format": "{{msg.payload}} GB",
        "layout": "row-spread",
        "x": 910,
        "y": 300,
        "wires": []
    },
    {
        "id": "e74fa56c.62e9f8",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 11,
        "width": "4",
        "height": "1",
        "name": "available",
        "label": "Available",
        "format": "{{msg.payload}} GB",
        "layout": "row-spread",
        "x": 920,
        "y": 340,
        "wires": []
    },
    {
        "id": "b1688b9b.7a81c8",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "func": "\nmsg.payload = (msg.payload.size/1000000).toFixed(3);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": [
            [
                "cad874b2.5866b8"
            ]
        ]
    },
    {
        "id": "e2018f68.6b13b",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "func": "\nmsg.payload = (msg.payload.used/1000000).toFixed(3);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "9bb2e59a.d7af18"
            ]
        ]
    },
    {
        "id": "3114bcc5.ca0eb4",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "func": "msg.payload = (msg.payload.available/1000000).toFixed(3);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 340,
        "wires": [
            [
                "e74fa56c.62e9f8"
            ]
        ]
    },
    {
        "id": "cc0bdc3e.71004",
        "type": "ui_gauge",
        "z": "e08f2a72.fad1a8",
        "name": "Used",
        "group": "9659c8c6.14dba8",
        "order": 9,
        "width": "2",
        "height": "2",
        "gtype": "donut",
        "title": "/dev/root",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca4d4d"
        ],
        "seg1": "",
        "seg2": "",
        "x": 910,
        "y": 380,
        "wires": []
    },
    {
        "id": "35263fd.97a90c",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "",
        "func": "msg.payload = Math.floor(msg.payload.capacity*100);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 380,
        "wires": [
            [
                "cc0bdc3e.71004"
            ]
        ]
    },
    {
        "id": "c36df418.a4eae8",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "/dev/root drive",
        "func": "\nmsg.payload = msg.payload[0];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "b1688b9b.7a81c8",
                "e2018f68.6b13b",
                "3114bcc5.ca0eb4",
                "35263fd.97a90c"
            ]
        ]
    },
    {
        "id": "f8042a70.7fb748",
        "type": "ui_text",
        "z": "e08f2a72.fad1a8",
        "group": "9659c8c6.14dba8",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "d45b4fde.90bd2",
        "type": "function",
        "z": "e08f2a72.fad1a8",
        "name": "last updated",
        "func": "var time = new Date();\nvar year = time.getFullYear();\nvar month = time.getMonth()+1;\nvar date1 = time.getDate();\nvar hour = time.getHours();\nvar minutes = time.getMinutes();\nvar seconds = time.getSeconds();\n\nmsg.payload = (year + \"-\" + month + \"-\"+date1+\" \"+hour+\":\"+minutes+\":\"+seconds + \" UTC\");\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 700,
        "wires": [
            [
                "f8042a70.7fb748"
            ]
        ]
    }
]